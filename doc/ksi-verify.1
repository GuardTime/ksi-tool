.TH KSI-VERIFY 1
.\"
.\"
.\"
.SH NAME
\fBksi verify \fR- Guardtime command-line tool for verifying KSI signatures.
.\"
.\"
.SH SYNOPSIS
.\"
.HP 4
\fBksi verify -i \fIin.ksig \fR[\fB-f \fIdata\fR] [\fImore options\fR]
.HP 4
\fBksi verify --ver-int -i \fIin.ksig \fR[\fB-f \fIdata\fR] [\fImore options\fR]
.HP 4
\fBksi verify --ver-cal -i \fIin.ksig \fR[\fB-f \fIdata\fR] \fB-X \fIurl \fR[\fB--ext-user \fIuser \fB--ext-key \fIkey\fR] [\fImore options\fR]
.HP 4
\fBksi verify --ver-key -i \fIin.ksig \fR[\fB-f \fIdata\fR] \fB-P \fIurl \fR[\fB--cnstr \fIoid\fR=\fIvalue\fR]... \fR[\fB-V \fIcert.pem\fR]... \fR[\fB-W \fIdir\fR]... [\fImore options\fR]
.HP 4
\fBksi verify --ver-pub -i \fIin.ksig \fR[\fB-f \fIdata\fR] \fB--pub-str \fIpubstr \fR[\fB-x -X \fIurl \fR[\fB--ext-user \fIuser \fB--ext-key \fIkey\fR]] [\fImore options\fR]
.HP 4
\fBksi verify --ver-pub -i \fIin.ksig \fR[\fB-f \fIdata\fR] \fB-P \fIurl \fR[\fB--cnstr \fIoid\fR=\fIvalue\fR]... \fR[\fB-V \fIcert.pem\fR]... \fR[\fB-W \fIdir\fR]... \fR[\fB-x -X \fIurl \fR[\fB--ext-user \fIuser \fB--ext-key \fIkey\fR]] [\fImore options\fR]
.\"
.\"
.SH DESCRIPTION
.\"
This is a KSI signature verification tool. There are four main verification policies related to a specific command line option that can be applied to a KSI signature. Signature can be verified with or without the file the signature was created for or with its pre calculated hash value imprint. Possible verification polices are:
.LP
.IP \(bu 4
Internal verification. Only signatures internal consistency is checked and no verification against any trust anchor is performed. This step is always performed during other polices. No external resources are needed.
.IP \(bu 4
Calendar-based verification. Signature is verified against calendar database. Verification is done by checking if the calculated output hash value of the aggregation hash chain exists in the calendar database at the same time the signature was created. Access to a trusted KSI extender is needed.
.IP \(bu 4
Key-based verification. Signature must contain a calendar hash chain and a calendar authentication record that can be verified against the signing certificates. To be able to perform key-based verification user must have an access to a trusted KSI publications file with signing certificates in it.
.IP \(bu 4
Publication-based verification. Signature must be extended (see \fBksi-extend\fR(1)) to a time of publication and contain a publication record. Verification is done by checking the signatures internal consistency and comparing the signatures publication record with publication data retrieved from publications file or publication string given from printed media. Trusted publications file or a copy of a printed media with corresponding published publication string in it is needed.
.LP
It must be noted that only publication-based verification should be used in long term as it does not rely on any keys and trusted services. The other polices can be used temporarily when the signature is created and there is not yet a publication to extend the signature to.
.\"
.\"
.SH OPTIONS
.\"
.TP
\fB--ver-int\fR
Perform internal verification.
.\"
.TP
\fB--ver-cal\fR
Perform calendar-based verification (use extending service).
.\"
.TP
\fB--ver-key\fR
Perform key-based verification.
.\"
.TP
\fB--ver-pub\fR
Perform publication-based verification.
.\"
.TP
\fB-i \fIsig\fR
KSI signature file to be verified. Use '-' as file name to read signatures file from \fIstdin\fR.
.\"
.TP
\fB-f \fIdata\fR
Files path to file to be hashed or data hash imprint to extract the hash value that is going to be verified. Hash format: <alg>:<hash in hex>. Use '-' as file name to read data to be hashed from \fIstdin\fR. Call \fBksi -h \fRto get the list of supported hash algorithms.
.\"
.TP
\fB-X \fIurl\fR
Specify extending service URL.
.\"
.TP
\fB--ext-user \fIstr\fR
User name for extending service.
.\"
.TP
\fB--ext-key \fIstr\fR
HMAC Key for extending service.
.\"
.TP
\fB-x\fR
Permit to use extender when using publication based verification.
.\"
.TP
\fB--pub-str \fIstr\fR
Specify a publication string to verify with.
.\"
.TP
\fB-P \fIurl\fR
Specify publications file URL (or file with uri scheme 'file://').
.\"
.TP
\fB--cnstr \fIoid\fR=\fIvalue\fR
OID and its expected value to verify publications file PKI signature. At least one constraint must be defined to be able to verify publications file but it is possible to define more. All values from lower priority source are ignored, where default configurations file is the lowest and command-line is the highest.
.\"
.TP
\fB-V \fIfile\fR
Specify an OpenSSL-style trust store file for publications file verification. All values from lower priority source are ignored, where default configurations file is the lowest and command-line is the highest.
.\"
.TP
\fB-W \fIdir\fR
Specify an OpenSSL-style trust store directory for publications file verification. All values from lower priority source are ignored, where default configurations file is the lowest and command-line is the highest.
.\"
.TP
\fB-d\fR
Print detailed information about processes and errors to \fIstderr\fR.
.\"
.TP
\fB--dump\fR
Dump signature and document hash being verified to \fIstdout\fR.
.\"
.TP
\fB--conf \fIfile\fR
Specify a configurations file to override default service information. It must be noted that service info from command-line will override the configurations file. See \fBksi\fR(1) and \fBksi-conf\fR(5) for more information.
.\"
.TP
\fB--log \fIfile\fR
Write libksi log into file. Use '-' as file name to redirect log to \fIstdout\fR.
.br
.\"
.\"
.\"
.SH EXIT STATUS
See \fBksi\fR(1) for more information.
.\"
.\"
.\"
.SH EXAMPLES
.\"
In the following examples it is assumed that default service urls are defined (see \fBksi\fR(1) \fRfor more information). Signature files with extension \fB.ksig \fRare not and files with extension \fB.ext.ksig \fRare extended signatures.

\fB1\fR To perform internal verification on KSI signature file \fItest.ksig \fRand document \fItest \fRcall:
.RS
\fBksi verify --ver-int -i \fItest.ksig\fR \fB-f \fItest\fR
.RE

\fB2\fR To perform key based verification on freshly created KSI signature file \fItest.ksig \fRand document hash call:
.RS
\fBksi verify --ver-key -i \fItest.ksig\fR \fB-f \fISHA-256:c8ef6d57ac28d1b4e95a513959f5fcdd0688380a43d601a5ace1d2e96884690a\fR
.RE

\fB3\fR To perform calendar based verification on KSI signature file \fItest.ksig \fRcall:
.RS
\fBksi verify --ver-cal -i \fItest.ksig\fR
.RE

\fB4\fR To perform publication based verification (printed in public media) on KSI signature file \fItest.ext.ksig \fRcall:
.RS
\fBksi verify --ver-pub -i \fItest.ext.ksig\fR \fB--pub-str \fIAAAAAA-CWYEKQ-AAIYPA-UJ4GRT-HXMFBE-OTB4AB-XH3PT3-KNIKGV-PYCJXU-HL2TN4-RG6SCC-3ZGSBM
.RE

\fB5\fR To perform publication  based verification (publication from publications file) on KSI signature file \fItest.ext.ksig \fRcall:
.RS
\fBksi verify --ver-pub -i \fItest.ext.ksig\fR
.RE

\fB6\fR To perform publication  based verification on not extended KSI signature file \fItest.ksig \fRcall:
.RS
\fBksi verify --ver-pub -i \fItest.ksig\fR \fB-x
.RE

\fB7\fR To perform verification on KSI signature \fItest.ksig \fRas possible and dump its content call:
.RS
\fBksi verify -i \fItest.ksig\fR \fB--dump\fR
.RE





.\"
.\"
.\"
.SH ENVIRONMENT
Environment variable \fBKSI_CONF \fR can be defined to set default KSI configurations file. See \fBksi\fR(1) and \fBksi-conf\fR(5) for more information.

.SH AUTHOR

Guardtime AS, http://www.guardtime.com/

.SH SEE ALSO
\fBksi\fR(1), \fBksi-sign\fR(1), \fBksi-extend\fR(1), \fBksi-pubfile\fR(1), \fBksi-conf\fR(5)
